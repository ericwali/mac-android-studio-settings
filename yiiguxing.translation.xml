<application>
  <component name="AppStorage">
    <option name="newTranslationDialogX" value="554" />
    <option name="newTranslationDialogY" value="558" />
    <option name="pinTranslationDialog" value="true" />
    <histories>
      <item value="The exception was not handled due to missing onError handler in the subscribe() method call. Further reading" />
      <item value="buffer" />
      <item value="write All" />
      <item value="rename To" />
      <item value="m Observable Emitter" />
      <item value="File Observable Status Enum" />
      <item value="runnable" />
      <item value="suspend" />
      <item value="File Status Enum" />
      <item value="download Status" />
      <item value="状态也" />
      <item value="update Notification" />
      <item value="set Auto Cancel" />
      <item value="FLAG MUTABLE" />
      <item value="FLAG ACTIVITY NEW TASK" />
      <item value="notification Click Start Class" />
      <item value="pending Intent" />
      <item value="NOTIFICATION SERVICE" />
      <item value="Post a notification to be shown in the status bar." />
      <item value="Deprecated ProgressDialog is a modal dialog, which prevents the user from interacting with the app. Instead of using this class, you should use a progress indicator like ProgressBar, which can be embedded in your app's UI. Alternatively, you can use a notification to inform the user of the task's progress" />
      <item value="A dialog showing a progress indicator and an optional text message or view. Only a text message or a view can be used at the same time. The dialog can be made cancelable on back key press. The progress range is 0 to max. Deprecated ProgressDialog is a modal dialog, which prevents the user from interacting with the app. Instead of using this class, you should use a progress indicator like ProgressBar, which can be embedded in your app's UI. Alternatively, you can use a notification to inform the user of the task's progress" />
      <item value="m Percent" />
      <item value="on File Down Load" />
      <item value="Percent" />
      <item value="Integer" />
      <item value="_on Next" />
      <item value="uploaded" />
      <item value="Base Down Load Disposable Observer" />
      <item value="compare And Set" />
      <item value="next" />
      <item value="dispose" />
      <item value="report Double Subscription" />
      <item value="upstream" />
      <item value="Disposable Observer" />
      <item value="An abstract Observer that allows asynchronous cancellation by implementing Disposable. All pre-implemented final methods are thread-safe. Use the public dispose() method to dispose the sequence from within an onNext implementation. Like all other consumers, DisposableObserver can be subscribed only once. Any subsequent attempt to subscribe it to a new source will yield an IllegalStateException with message &quot;It is not allowed to subscribe with a(n) &lt;class name&gt; multiple times.&quot;." />
      <item value="is Disposed" />
      <item value="Called once the single upstream Disposable is set via onSubscribe" />
      <item value="Atomically updates the target upstream AtomicReference from null to the non-null next Disposable, otherwise disposes next and reports a ProtocolViolationException if the AtomicReference doesn't contain the shared disposed indicator. Params: upstream – the target AtomicReference to update next – the Disposable to set on it atomically observer – the class of the consumer to have a personalized error message if the upstream already contains a non-cancelled Disposable. Returns: true if successful, false if the content of the AtomicReference was non" />
      <item value="set Once" />
      <item value="End Consumer Helper" />
      <item value="get Class" />
      <item value="on Start" />
      <item value="Provides the Observer with the means of cancelling (disposing) the connection (channel) with the Observable in both synchronous (from within onNext(Object)) and asynchronous manner. Params: d – the Disposable instance whose Disposable.dispose() can be called anytime to cancel the connection Since:" />
      <item value="Provides the Observer with the means of cancelling (disposing) the connection (channel) with the Observable in both synchronous (from within onNext(Object)) and asynchronous manner. Params: d – the Disposable instance whose Disposable.dispose() can be called anytime to cancel the connection Since: 2.0" />
      <item value="Down Load Observer" />
      <item value="Download Subscribe" />
      <item value="Down Load Transformer" />
      <item value="Observable" />
      <item value="Sneaky Throws" />
      <item value="flat Map" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1947" />
        <entry key="ENGLISH" value="1904" />
        <entry key="BULGARIAN" value="1" />
        <entry key="AFRIKAANS" value="7" />
        <entry key="GERMAN" value="2" />
        <entry key="FRENCH" value="5" />
        <entry key="FILIPINO" value="4" />
        <entry key="FINNISH" value="4" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="CZECH" value="1" />
        <entry key="ROMANIAN" value="2" />
        <entry key="NORWEGIAN" value="4" />
        <entry key="PORTUGUESE" value="2" />
        <entry key="SWAHILI" value="2" />
        <entry key="SPANISH" value="2" />
        <entry key="ITALIAN" value="3" />
        <entry key="HINDI" value="10" />
        <entry key="INDONESIAN" value="16" />
        <entry key="VIETNAMESE" value="13" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1668993665629" />
  </component>
  <component name="Settings">
    <option name="aliTranslateSettings">
      <app-key>
        <option name="appId" value="LTAI5t85mrsuLgmwGXwuxkT4" />
      </app-key>
    </option>
    <option name="translator" value="ALI" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="03d7d058148f84e9" />
        <option name="primaryLanguage" value="ESPERANTO" />
      </youdao-translate>
    </option>
  </component>
</application>