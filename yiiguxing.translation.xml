<application>
  <component name="AppStorage">
    <option name="newTranslationDialogX" value="548" />
    <option name="newTranslationDialogY" value="360" />
    <histories>
      <item value="wake Lock Screen Receiver" />
      <item value="FLAG IMMUTABLE" />
      <item value="notification Click Start Class" />
      <item value="Notification Click Start Class" />
      <item value="Notification Start Class" />
      <item value="start Class" />
      <item value="use NotificationChannel.getSound() and NotificationChannel.shouldShowLights() and NotificationChannel.shouldVibrate()." />
      <item value="Notification Channel.enable Lights" />
      <item value="Set which notification properties will be inherited from system defaults. The value should be one or more of the following fields combined with bitwise-or: DEFAULT_SOUND, DEFAULT_VIBRATE, DEFAULT_LIGHTS. For all default values, use DEFAULT_ALL. Deprecated use NotificationChannel.enableVibration(boolean) and NotificationChannel.enableLights(boolean) and NotificationChannel.setSound(Uri, AudioAttributes) instead." />
      <item value="set Vibrate" />
      <item value="set Sound" />
      <item value="set Auto Cancel" />
      <item value="FLAG FOREGROUND SERVICE" />
      <item value="set Only Alert Once" />
      <item value="set When" />
      <item value="Notification Channel" />
      <item value="IMPORTANCE DEFAULT" />
      <item value="NOTIFICATION SERVICE" />
      <item value="JELLY BEAN" />
      <item value="Bad notification for startForeground" />
      <item value="FLAG NO CLEAR" />
      <item value="Notification Channel.should Vibrate()" />
      <item value="Notification Channel.get Sound()" />
      <item value="DEFAULT ALL" />
      <item value="DEFAULT LIGHTS" />
      <item value="DEFAULT VIBRATE" />
      <item value="DEFAULT SOUND," />
      <item value="defaults" />
      <item value="Specifies which values should be taken from the defaults. To set, OR the desired from DEFAULT_SOUND, DEFAULT_VIBRATE, DEFAULT_LIGHTS. For all default values, use DEFAULT_ALL. Deprecated use NotificationChannel.getSound() and NotificationChannel.shouldShowLights() and NotificationChannel.shouldVibrate()." />
      <item value="FLAG GROUP SUMMARY" />
      <item value="notification" />
      <item value="notification.defaults" />
      <item value="enable Vibration" />
      <item value="m Vibration Enabled" />
      <item value="set Vibration Pattern" />
      <item value="set Show Badge" />
      <item value="GREEN" />
      <item value="set Light Color" />
      <item value="createnotificationchannel" />
      <item value="android.app.RemoteServiceExceptionCannotPostForegroundServiceNotificationException: Bad notification for startForeground" />
      <item value="create Notification Channel" />
      <item value="Utils Context Of Gaode" />
      <item value="notification for startForeground" />
      <item value="set Content Intent" />
      <item value="current Time Millis" />
      <item value="start Foreground" />
      <item value="Returns: the base context as set by the constructor or setBaseContext" />
      <item value="Similar to startService(Intent), but with an implicit promise that the Service will call startForeground(int, android.app.Notification) once it begins running. The service is given an amount of time comparable to the ANR interval to do this, otherwise the system will automatically stop the service and declare the app ANR. Unlike the ordinary startService(Intent), this method can be used at any time, regardless of whether the app hosting the service is in a foreground state. Note: Beginning with SDK Version Build.VERSION_CODES.S, apps targeting SDK Version Build.VERSION_CODES.S or higher are not allowed to start foreground services from the background. See Behavior changes: Apps targeting Android 12 for more details. Params: service – Identifies the service to be started. The Intent must be fully explicit (supplying a component name). Additional values may be included in the Intent extras to supply arguments along with this specific start call. Returns: If the service is being started or is already running, the ComponentName of the actual service that was started is returned; else if the service does not exist null is returned. Throws: SecurityException – If the caller does not have permission to access the service or the service can not be found. android.app.ForegroundServiceStartNotAllowedException – If the caller app's targeting API is Build.VERSION_CODES.S or later, and the foreground service is restricted from start due to background restriction. See Also: stopService, android.app.Service.startForeground(int, android.app.Notification)" />
      <item value="Ic.collect.debug: Explicit concurrent copying GC freed 41426(2254KB) AllocSpace objects, 53(1124KB) LOS objects, 24% free, 6728KB8971KB, paused 62us,32us total 30.027ms" />
      <item value="map View" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1944" />
        <entry key="ENGLISH" value="1890" />
        <entry key="BULGARIAN" value="1" />
        <entry key="AFRIKAANS" value="7" />
        <entry key="GERMAN" value="2" />
        <entry key="FRENCH" value="5" />
        <entry key="FILIPINO" value="4" />
        <entry key="FINNISH" value="4" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="CZECH" value="1" />
        <entry key="ROMANIAN" value="2" />
        <entry key="NORWEGIAN" value="4" />
        <entry key="PORTUGUESE" value="2" />
        <entry key="SWAHILI" value="2" />
        <entry key="SPANISH" value="2" />
        <entry key="ITALIAN" value="3" />
        <entry key="HINDI" value="10" />
        <entry key="INDONESIAN" value="16" />
        <entry key="VIETNAMESE" value="13" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1666583994705" />
  </component>
  <component name="Settings">
    <option name="aliTranslateSettings">
      <app-key>
        <option name="appId" value="LTAI5t85mrsuLgmwGXwuxkT4" />
      </app-key>
    </option>
    <option name="translator" value="ALI" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="03d7d058148f84e9" />
        <option name="primaryLanguage" value="ESPERANTO" />
      </youdao-translate>
    </option>
  </component>
</application>