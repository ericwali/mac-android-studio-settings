<application>
  <component name="AppStorage">
    <histories>
      <item value="default On Measure" />
      <item value="Measure the attached RecyclerView. Implementations must call {@link setMeasuredDimension(int, int)} before returning. &lt;p&gt; It is strongly advised to use the AutoMeasure mechanism by overriding {@link isAutoMeasureEnabled()} to return true as AutoMeasure handles all the standard measure cases including when the RecyclerView's layout_width or layout_height have been set to wrap_content. If {@link isAutoMeasureEnabled()} is overridden to return true, this method should not be overridden. &lt;p&gt; The default implementation will handle EXACTLY measurements and respect the minimum width and height properties of the host RecyclerView if measured as UNSPECIFIED. AT_MOST measurements will be treated as EXACTLY and the RecyclerView will consume all available space." />
      <item value="onmeasure" />
      <item value="set Reach Bottom Row" />
      <item value="handle More Media Data" />
      <item value="load More Media Data" />
      <item value="on Recycler View Preload More" />
      <item value="Synchronous First data Cover" />
      <item value="get Album First Cover" />
      <item value="get Content Resolver" />
      <item value="get Page Selection" />
      <item value="get Query Mime Condition" />
      <item value="page query specified contents" />
      <item value="loader Data Engine" />
      <item value="local Media Folder" />
      <item value="On Query Data Result Listener" />
      <item value="bucket Id" />
      <item value="m Page" />
      <item value="load Page Media Data" />
      <item value="is Enabled Load More" />
      <item value="post Delayed" />
      <item value="is Memory Recycling" />
      <item value="on Recycler View Preload Listener" />
      <item value="is In The Bottom" />
      <item value="is Reach Bottom" />
      <item value="reach Bottom Row" />
      <item value="row Count" />
      <item value="last Visible Row Position" />
      <item value="on Recycler View Scroll Listener" />
      <item value="set Layout Manager Position" />
      <item value="Adapter is null,Please check it" />
      <item value="Called when the scroll position of this RecyclerView changes. Subclasses should use this method to respond to scrolling within the adapter's data set instead of an explicit listener. &lt;p&gt;This method will always be invoked before listeners. If a subclass needs to perform any additional upkeep or bookkeeping after scrolling but before listeners run, this is a good place to do so.&lt;p&gt; &lt;p&gt;This differs from {@link ViewonScrollChanged(int, int, int, int)} in that it receives the distance scrolled in either direction within the adapter's data set instead of absolute scroll coordinates. Since RecyclerView cannot compute the absolute scroll position from any arbitrary point in the data set, &lt;code&gt;onScrollChanged&lt;code&gt; will always receive the current {@link ViewgetScrollX()} and {@link ViewgetScrollY()} values which do not correspond to the data set scroll position. However, some subclasses may choose to use these fields as special offsets.&lt;p&gt;" />
      <item value="set On Recycler View Scroll State Listener" />
      <item value="on Scroll State Changed" />
      <item value="LayoutManager is null,Please check it!" />
      <item value="LayoutManager is null,Please check it" />
      <item value="layout Manager" />
      <item value="Recycler Preload View" />
      <item value="when the lastVisibleRow is Penultimate Row , call the onReachBottom(); And so on" />
      <item value="mean : when the lastVisibleRow is lastRow , call the onReachBottom();" />
      <item value="on Reach Bottom" />
      <item value="mean" />
      <item value="BOTTOM PRELOAD" />
      <item value="Preload" />
      <item value="set On Recycler View Preload Listener" />
      <item value="on Scroll Slow" />
      <item value="mean : when the lastVisibleRow is lastRow , call the" />
      <item value="mean : when the lastVisibleRow is Penultimate Row , call the onReachBottom();" />
      <item value="Grid Layout Manager" />
      <item value="Attribute Set" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="150" />
        <entry key="ENGLISH" value="151" />
        <entry key="BULGARIAN" value="1" />
        <entry key="CATALAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1664796007244" />
  </component>
  <component name="Settings">
    <option name="translator" value="YOUDAO" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="03d7d058148f84e9" />
        <option name="primaryLanguage" value="ESPERANTO" />
      </youdao-translate>
    </option>
  </component>
</application>