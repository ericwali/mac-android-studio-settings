<application>
  <component name="AppStorage">
    <option name="newTranslationDialogX" value="548" />
    <option name="newTranslationDialogY" value="360" />
    <histories>
      <item value="Abstract base implementation of an Observer with support for cancelling a subscription via cancel() (synchronously) and calls onStart() when the subscription happens. All pre-implemented final methods are thread-safe. Use the protected cancel() to dispose the sequence from within an onNext implementation. Like all other consumers, DefaultObserver can be subscribed only once. Any subsequent attempt to subscribe it to a new source will yield an IllegalStateException with message &quot;It is not allowed to subscribe with a(n) &lt;class name&gt; multiple times.&quot;. Implementation of onStart(), onNext(Object), onError(Throwable) and onComplete() are not allowed to throw any unchecked exceptions. If for some reason this can't be avoided, use io.reactivex.Observable.safeSubscribe(Observer) instead of the standard subscribe() method." />
      <item value="Default Observer" />
      <item value="An abstract Observer that allows asynchronous cancellation of its subscription and associated resources. All pre-implemented final methods are thread-safe. To release the associated resources, one has to call dispose() in onError() and onComplete() explicitly. Use add(Disposable) to associate resources (as Disposables) with this ResourceObserver that will be cleaned up when dispose() is called. Removing previously associated resources is not possible but one can create a CompositeDisposable, associate it with this ResourceObserver and then addremove resources tofrom the CompositeDisposable freely. Use the dispose() to dispose the sequence from within an onNext implementation. Like all other consumers, ResourceObserver can be subscribed only once. Any subsequent attempt to subscribe it to a new source will yield an IllegalStateException with message &quot;It is not allowed to subscribe with a(n) &lt;class name&gt; multiple times.&quot;. Implementation of onStart(), onNext(Object), onError(Throwable) and onComplete() are not allowed to throw any unchecked exceptions. If for some reason this can't be avoided, use io.reactivex.Observable.safeSubscribe(Observer) instead of the standard subscribe() method." />
      <item value="Disposable" />
      <item value="Disposable Observer" />
      <item value="Base Response" />
      <item value="dispose" />
      <item value="Consumer" />
      <item value="disposable" />
      <item value="show Dialog" />
      <item value="subscribe" />
      <item value="do On Subscribe" />
      <item value="Single Live Event" />
      <item value="create Live Data" />
      <item value="show Dialog Event" />
      <item value="exception Transformer" />
      <item value="schedulers Transformer" />
      <item value="access Token" />
      <item value="subscribe On" />
      <item value="check Login" />
      <item value="is Whitespace" />
      <item value="is Digits Only" />
      <item value="view Initialization" />
      <item value="clear Btn Visibility" />
      <item value="login Name" />
      <item value="login Password" />
      <item value="Observable Field" />
      <item value="Point Recycler View Layout Util" />
      <item value="set Layout Manager" />
      <item value="attach To Recycler View" />
      <item value="Callback" />
      <item value="Shelf Touch Helper" />
      <item value="Trip Shelf Touch Helper" />
      <item value="trip" />
      <item value="Recycler View Util" />
      <item value="Trip Shelf Adapter" />
      <item value="Drive Segment List Adapter" />
      <item value="Single Route Calculate Activity" />
      <item value="Route Overlay Util" />
      <item value="Driving Route Overlay" />
      <item value="get Sub City Type" />
      <item value="On Child Attach State Change Listener" />
      <item value="Item Touch Helper" />
      <item value="Tip List Item Touch Util" />
      <item value="Tip List Item Touch Helper" />
      <item value="Helper" />
      <item value="Tip List Item Touch Helper Callback" />
      <item value="init Click Listener" />
      <item value="on Create View Holder" />
      <item value="Recycler View.Item Decoration" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1427" />
        <entry key="ENGLISH" value="1396" />
        <entry key="BULGARIAN" value="1" />
        <entry key="AFRIKAANS" value="2" />
        <entry key="FRENCH" value="3" />
        <entry key="FILIPINO" value="2" />
        <entry key="FINNISH" value="2" />
        <entry key="CATALAN" value="1" />
        <entry key="CZECH" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="SPANISH" value="2" />
        <entry key="ITALIAN" value="1" />
        <entry key="HINDI" value="3" />
        <entry key="INDONESIAN" value="1" />
        <entry key="VIETNAMESE" value="11" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1665714373235" />
  </component>
  <component name="Settings">
    <option name="translator" value="YOUDAO" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="03d7d058148f84e9" />
        <option name="primaryLanguage" value="ESPERANTO" />
      </youdao-translate>
    </option>
  </component>
</application>